AWSTemplateFormatVersion: "2010-09-09"
Description: "This template deploys a secondary Aurora PostgreSQL Cluster with 2 instances and attaches it to the Global Cluster"

###############################################################################
# Parameters
###############################################################################

Parameters:
  DBInstanceIdentifier:
    Type: String
    Default: "aurora"

  GlobalClusterIdentifier:
    Type: String
    Description: Identifier used for global database cluster
    AllowedPattern: "^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$"
    Default: "aurora-global-cluster"

  DBEngine:
    Type: String
    Default: "aurora-postgresql"

  DBEngineVersion:
    Description: Select Database Engine Version
    Type: String
    Default: "13.7"
    AllowedValues:
      - 13.4
      - 13.7

  FirstDBInstanceClass:
    Default: db.serverless
    Description: Database Instance Class. db.t3.medium instance class is supported for Aurora PostgreSQL 10.7 or later.
    Type: String
    AllowedValues:
      - db.t3.medium
      - db.serverless

  SecondDBInstanceClass:
    Default: db.serverless
    Description: Database Instance Class. db.t3.medium instance class is supported for Aurora PostgreSQL 10.7 or later.
    Type: String
    AllowedValues:
      - db.t3.medium
      - db.serverless

  DBName:
    Description: Database Name
    Default: aurora
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_]*$"
    ConstraintDescription: Must start with a letter. Only numbers, letters, and _ accepted. max length 64 characters

  DBPort:
    Description: TCP/IP Port for the Database Instance
    Type: Number
    Default: "5432"
    ConstraintDescription: "Must be in the range [1115-65535]"
    MinValue: "1115"
    MaxValue: "65535"

###############################################################################
# Resources
###############################################################################

Resources:
  AuroraClusterSecondary:
    Type: AWS::RDS::DBCluster
    UpdateReplacePolicy: Retain
    Properties:
      GlobalClusterIdentifier: !Ref GlobalClusterIdentifier
      Engine: !Ref DBEngine
      EngineVersion: !Ref DBEngineVersion
      DBClusterParameterGroupName: !Ref RDSDBClusterParameterGroup
      Port: !Ref DBPort
      StorageEncrypted: True
      KmsKeyId: !Ref AuroraKMSKey
      DeletionProtection: True
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 1

  FirstInstanceSecondary:
    Type: AWS::RDS::DBInstance
    UpdateReplacePolicy: Retain
    Properties:
      CopyTagsToSnapshot: True
      DBInstanceClass: !Ref FirstDBInstanceClass
      DBClusterIdentifier: !Ref AuroraClusterSecondary
      Engine: !Ref DBEngine
      PubliclyAccessible: False
      EnablePerformanceInsights: True
      PromotionTier: 2

  SecondInstanceSecondary:
    Type: AWS::RDS::DBInstance
    UpdateReplacePolicy: Retain
    Properties:
      CopyTagsToSnapshot: True
      DBInstanceClass: !Ref SecondDBInstanceClass
      DBClusterIdentifier: !Ref AuroraClusterSecondary
      Engine: !Ref DBEngine
      PubliclyAccessible: False
      EnablePerformanceInsights: True
      PromotionTier: 2

  RDSDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Sub "Aurora Cluster Parameter Group for database ${DBName}"
      Family: "aurora-postgresql13"
      Parameters:
        rds.force_ssl: 1
        work_mem: 262144
        maintenance_work_mem: 262144
        log_connections: 1
        log_disconnections: 1
      Tags:
        - Key: Name
          Value: !Sub "${DBInstanceIdentifier}-DBClusterParameterGroup"
  
  AuroraKMSKey:
      Type: AWS::KMS::Key
      Properties:
        KeyPolicy:
          Version: 2012-10-17
          Id: rds-kms-key
          Statement:
            - Sid: "Allow access through RDS for all principals in the account that are authorized to use RDS"
              Effect: "Allow"
              Principal: 
                AWS: "*"
              Action: 
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:ReEncrypt*"
                - "kms:GenerateDataKey*"
                - "kms:CreateGrant"
                - "kms:ListGrants"
                - "kms:DescribeKey"            
              Resource: "*"
              Condition:
                StringEquals:
                  "kms:ViaService": !Sub "rds.:${AWS::Region}.amazonaws.com"
                  "kms:CallerAccount": !Ref 'AWS::AccountId'
            - Sid: "Allow administrator use of the key"
              Effect: Allow
              Principal:
                AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
              Action: 'kms:*'
              Resource: "*"

  AuroraKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties: 
      AliasName: alias/aurora-kms-key
      TargetKeyId: !Ref AuroraKMSKey